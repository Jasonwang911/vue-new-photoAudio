/* 此js文件用于存储公用的vuex状态 */
import * as types from './../types.js'
import {
  baseUrlHost
} from './../../config/env'

let finsuithttpUrl = document.location.protocol + '//' + document.location.host

const state = {
  SESSION_ID: '',
  token: '',
  mobile: '',
  fromPath: '',
  toPath: '',
  // 比财图片公共地址
  BCcontextPathSrc: baseUrlHost + '/finsuit/finsuitFileDown/down?path=',
  // 验证码图片公共地址
  safeCodeIP: baseUrlHost + '/finsuit/finsuitSafeCode?SESSION_ID=',
  // 浮层型头部组件返回按钮状态
  back_Icon: false,
  // 请求数据时加载状态loading
  fetchLoading: false,
  // 公共footer的显示状态
  footerCommon: true,
  // 保存滚动位置
  savePosition: Number,
  // 选择从vuex中读取数据还是从组件内部获取数据
  dataFromVuex: false,
  // 微信分享相关操作
  wxShareMsg: {
    share_title: '抽奖中壕礼，你也来试试手气吧！',
    share_description: '去应用平台下载比财APP，好礼活动等你来！',
    share_item_url: 'https://finsuit.udomedia.com.cn/finsuit/static/finsuit/vue/index.html#/',
    share_icon_url: baseUrlHost + '/finsuit/static/finsuit/vue/static/bicai.png',
  }
}

const getters = {
  // SESSION_ID的获取
  sessionId: state => state.SESSION_ID,
  // token的获取
  token: state => {
    if (state.token == '' || state.token == null || state.token == undefined) {
      if (sessionStorage.getItem('token')) {
        state.token = sessionStorage.getItem('token');
        return sessionStorage.getItem('token');
      } else {
        return '';
      }
    } else {
      return state.token
    }
  },
  // 导航钩子函数的页面来源和去处
  fromPath: state => state.fromPath,
  toPath: state => state.toPath,
  // 登陆页面图片验证码
  safeCodeIP: state => state.safeCodeIP,
  // 获取登陆手机号
  mobile: state => {
    if (state.mobile == '' || state.mobile == null) {
      return sessionStorage.getItem('mobile')
    } else {
      return state.mobile
    }
  },
  // 获取比财图片公用ip
  BCcontextPathSrc: state => state.BCcontextPathSrc = state.BCcontextPathSrc,
  // 获取浮层型返回按钮给父组件的传值
  back_Icon: state => state.back_Icon = state.back_Icon,
  // 请求数据时加载状态
  fetchLoading: state => state.fetchLoading,
  // 公共footer的显示状态
  footerCommon: state => state.footerCommon,
  // 保存位置
  savePosition: state => state.savePosition,
  // 选择从vuex中读取数据还是从组件内部获取数据
  dataFromVuex: state => state.dataFromVuex,
  // 微信分享相关信息
  wxShareMsg: state => state.wxShareMsg,
}

const actions = {
  // 首次请求数据保存 sessionId
  SESSION_ID({
    commit
  }, res) {
    commit(types.SESSION_ID, res)
  },
  // 登陆之后存储token
  storeToken({
    commit
  }, res) {
    sessionStorage.setItem('token', res)
    commit(types.STORE_TOKEN, res)
  },
  // 登陆后存储手机号
  storeMobile({
    commit
  }, res) {
    sessionStorage.setItem('mobile', res)
    commit(types.STORE_MOBILE, res)
  },
  // 登陆拦截 路由的的 from 和 to
  FROM_PATH({
    commit
  }, res) {
    sessionStorage.setItem('fromPath', res)
    commit(types.FROM_PATH, res)
  },
  TO_PATH({
    commit
  }, res) {
    sessionStorage.setItem('toPath', res)
    commit(types.TO_PATH, res)
  },
  // 浮层型返回按钮给父组件的传值
  back_Icon({
    commit
  }, res) {
    commit(types.BACK_ICON, res)
  },
  // 请求数据时状态loading
  FETCH_LOADING({
    commit
  }, res) {
    commit(types.FETCH_LOADING, res)
  },
  // 公用组件 footer 的显示状态
  FOOTER_STATE({
    commit
  }, res) {
    commit(types.FOOTER_STATE, res);
  },
  // 保存滚动位置
  SAVE_POSITION({
    commit
  }, res) {
    commit(types.SAVE_POSITION, res);
  },
  // 选择从vuex中读取数据还是从组件内部获取数据
  DATA_FROM_VUEX({
    commit
  }, res) {
    commit(types.DATA_FROM_VUEX, res);
  },
  WX_SHARE_MSG({
    commit
  }, res) {
    commit(types.WX_SHARE_MSG, res);
  }
}

const mutations = {
  // 首次登陆保存SESSION_ID
  [types.SESSION_ID](state, res) {
    state.SESSION_ID = res
  },
  [types.STORE_TOKEN](state, res) {
    state.token = res
  },
  // 导航钩子页面跳转的来处 和 去处
  [types.FROM_PATH](state, res) {
    state.fromPath = res
  },
  [types.TO_PATH](state, res) {
    state.toPath = res
  },
  [types.STORE_MOBILE](state, res) {
    state.mobile = res
  },
  [types.BACK_ICON](state, res) {
    state.back_Icon = res
  },
  // 请求数据时loading
  [types.FETCH_LOADING](state, res) {
    state.fetchLoading = res
  },
  // 公用组件 footer 的显示状态个更改
  [types.FOOTER_STATE](state, res) {
    state.footerCommon = res;
  },
  // 保存滚动位置
  [types.SAVE_POSITION](state, res) {
    state.savePosition = res;
  },
  // 选择从vuex中读取数据还是从组件内部获取数据
  [types.DATA_FROM_VUEX](state, res) {
    state.dataFromVuex = res;
  },
  // 微信分享相关操作的参数
  [types.WX_SHARE_MSG](state, res) {
    for (let name in res) {
      state.wxShareMsg[name] = res[name];
    }
  }
}

export default {
  state,
  actions,
  getters,
  mutations
}